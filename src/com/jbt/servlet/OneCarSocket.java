package com.jbt.servlet;import java.io.IOException;import java.util.Map;import java.util.Timer;import java.util.TimerTask;import javax.websocket.OnClose;import javax.websocket.OnMessage;import javax.websocket.OnOpen;import javax.websocket.Session;import javax.websocket.server.ServerEndpoint;import net.sf.json.JSONObject;import org.springframework.web.context.ContextLoader;import com.jbt.service.CarMsgInfoService;@ServerEndpoint("/onecarsocket")public class OneCarSocket {private int serviceno = 0;private String sn;private Timer timer;//concurrent包的线程安全Set，用来存放每个客户端对应的MyWebSocket对象。若要实现服务端与单一客户端通信的话，可以使用Map来存放，其中Key可以为用户标识//private static CopyOnWriteArraySet<WebSocketTest> webSocketSet = new CopyOnWriteArraySet<WebSocketTest>(); //与某个客户端的连接会话，需要通过它来给客户端发送数据private Session session;      @OnMessage  public void onMessage(String  message,Session session)    throws IOException, InterruptedException {	  this.session = session;	  String[] s = message.split("&");	  serviceno = Integer.parseInt(s[0]);	  switch (serviceno) {	case 2:		sn = s[1];		showOneCar();		break;	case 3:		onClose();		break;	default:		break;	}	   }      /**   * 显示某一辆车实时监控   * @param sn   */  public void showOneCar()  {	 	  	timer = new Timer();		TimerTask task = new TimerTask() {			@Override			public void run() {				CarMsgInfoService carMsgInfoService = (CarMsgInfoService) ContextLoader						.getCurrentWebApplicationContext().getBean(								"CarMsgInfoService");				Map<?, ?> carMsgInfo = carMsgInfoService						.searchBySn(sn);				String str = JSONObject.fromObject(carMsgInfo).toString();				try {					session.getBasicRemote().sendText(str);				} catch (IOException e) {					// TODO Auto-generated catch block					e.printStackTrace();				}			}		};		timer.schedule(task, 0, 5000);// 10秒一次  }             @OnOpen  public void onOpen(Session session) {    System.out.println("Client connected");  }   @OnClose  public void onClose() {    System.out.println("Connection closed");    timer.cancel();   }}