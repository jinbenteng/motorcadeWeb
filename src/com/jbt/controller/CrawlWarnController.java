package com.jbt.controller;import java.util.ArrayList;import java.util.Arrays;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import net.sf.json.JSONArray;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestMapping;import com.jbt.bean.CrawlInfo;import com.jbt.bean.ManagerInfo;import com.jbt.bean.WarnInfo;import com.jbt.service.CrawlCarInfoService;import com.jbt.service.CrawlInfoService;import com.jbt.service.ManagerInfoService;import com.jbt.service.SectorInfoService;import com.jbt.service.WarnInfoService;import com.jbt.util.DateUtil;import com.jbt.util.Page;@Controllerpublic class CrawlWarnController {	private final Logger log = LoggerFactory			.getLogger(CrawlWarnController.class);	@Resource	private CrawlCarInfoService crawlCarInfoService;	@Resource	private CrawlInfoService crawlInfoService;	@Resource	private ManagerInfoService managerInfoService;	@Resource	private SectorInfoService sectorService;	@Resource	private WarnInfoService warnService;	@RequestMapping(value = "/crawlWarn_manage")	public String crawlWarn_manage(HttpServletRequest request,			CrawlInfo crawlinfo, Integer pageNow, Model model) {		try {			JSONArray crawlArray = new JSONArray();			JSONArray carMsgArray = new JSONArray();			ManagerInfo manager = managerInfoService					.selectByName((String) request.getSession().getAttribute(							"username"));			List<Map<?, ?>> crawlList = crawlCarInfoService					.searchCrawlByManager(crawlinfo, manager.getId());			if (!crawlList.isEmpty())				crawlArray = JSONArray.fromObject(crawlList);			List<Map<?, ?>> carMsgInfoList = crawlCarInfoService					.searchByCrawlWarnId(crawlinfo, manager.getId());			List<Map<?, ?>> mapList = new ArrayList<Map<?, ?>>();			if (crawlinfo.getCrawlname() != null) {				if (!carMsgInfoList.isEmpty()) {					if (!crawlList.isEmpty()) {						for (int i = 0; i < carMsgInfoList.size(); i++) {							Map<String, Object> map = (Map<String, Object>) carMsgInfoList.get(i);							String[] s = map.get("crawlwarnId").toString()									.split(",");							StringBuilder sb = new StringBuilder();							for (int j = 0; j < crawlList.size(); j++) {																List<String> tempList = Arrays.asList(s);																if (tempList.contains(crawlList.get(j)										.get("id").toString())) {									if (j == crawlList.size() - 1)										sb.append(crawlList.get(j).get("id"));									else										sb.append(crawlList.get(j).get("id"))											.append(",");								}															}							map.put("crawlwarnId", sb.toString());							mapList.add(map);						}					} else {						for (int i = 0; i < carMsgInfoList.size(); i++) {							Map<String, Object> map = (Map<String, Object>) carMsgInfoList.get(i);							map.put("crawlwarnId", "");							mapList.add(map);						}					}				}				carMsgArray = JSONArray.fromObject(mapList);			} else				carMsgArray = JSONArray.fromObject(carMsgInfoList);			Page crawlPage = crawlInfoService.getCrawlList(crawlinfo, pageNow);			List<Map<?, ?>> warnList = warnService.searchByManager(crawlinfo,					manager.getId());			int maxId = warnService.getMaxId(crawlinfo, manager.getId());			model.addAttribute("crawlInfo", crawlArray.toString());			model.addAttribute("carMsgInfo", carMsgArray.toString());			model.addAttribute("sectorDataWithCar", sectorService					.getTreeDataWithCar().toString());			model.addAttribute("crawlPage", crawlPage);			if (crawlinfo.getCrawlname() == null)				model.addAttribute("crawlinfo", new CrawlInfo());			else				model.addAttribute("crawlinfo", crawlinfo);			model.addAttribute("warnList", warnList);			model.addAttribute("maxId", maxId);		} catch (Exception e) {			e.printStackTrace();		}		return "Electronic_alarm";	}	@RequestMapping(value = "/insertCrawlWarn", produces = { "application/json;charset=UTF-8" })	public void insertCrawlWarn(String sn, String warnType) {		WarnInfo warn = new WarnInfo();		warn.setSn(sn);		warn.setWarntype(Integer.parseInt(warnType));		warn.setCreatedate(DateUtil.getCurrentDate(DateUtil.DATE_FORMAT_3));		try {			warnService.insert(warn);		} catch (Exception e) {			e.printStackTrace();		}	}}